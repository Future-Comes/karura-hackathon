type Swap @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: Int!
  eventIdx: Int!
  step: Int!
  fromCurrency: Currency!
  toCurrency: Currency!
  fromAmount: BigInt!
  toAmount: BigInt!
}


type LiquidityChange @entity {
  "LiquidityChange address"
  id: ID!
  pool: Pool!
  currencyZero: Currency!
  currencyOne: Currency!
  amountZero: BigInt!
  amountOne: BigInt!
  step: Int!
  totalValue: Float!
  totalLiquidityZero: BigInt!
  totalLiquidityOne: BigInt!
  changeReason: LiquidityChangeReason!
  timestamp: BigInt!
  blockNumber: Int!
  eventIdx: Int!
  eventId: String!
  hash: String!
  account: String!
}

enum LiquidityChangeReason {
  INIT
  SWAP
  ADD
  REMOVE
}

type CoinGecko @entity {
  id: ID!
  symbol: String! @unique
  name: String!
  price: Float
  updatedAt: Int
}

type Currency @entity {
  "Currency address"
  id: ID!
  symbol: String! @index @unique
  decimal: Int!
  coinGecko: CoinGecko
  volumeDayHistory: [CurrVolumeDay!]! @derivedFrom(field: "currency")
  liquidityHistory: [CurrLiquidity!]! @derivedFrom(field: "currency")
  priceHistory: [CurrPrice!]! @derivedFrom(field: "currency")
  transactions: [LiquidityChange!]! @derivedFrom(field: "currencyZero")
}

type CurrPrice @entity {
  id: ID!
  currency: Currency!
  usdPrice: Float!
  timestamp: Int!
}

type CurrVolumeDay @entity {
  id: ID!
  currency: Currency! @index
  volumeDayNative: BigInt!
  volumeDayUSD: Float!
  timestamp: Int!
}

type CurrLiquidity @entity {
  id: ID!
  currency: Currency!
  liquidity: BigInt!
  liquidityUSD: Float!
  timestamp: Int!
}

type Pool @entity {
  "Pool address"
  id: ID!
  currencyZero: Currency! @index
  currencyOne: Currency! @index
  volumeDaysDay: [PoolVolumeDay!]! @derivedFrom(field: "pool")
  liquidityHistory: [PoolLiquidity!]! @derivedFrom(field: "pool")
  poolOperations: [LiquidityChange!]! @derivedFrom(field: "pool")
}

type PoolVolumeDay @entity {
  id: ID!
  pool: Pool!
  volumeDayUSD: Float!
  timestamp: Int!
}

type PoolLiquidity @entity {
  id: ID!
  pool: Pool!
  usdPriceZero: Float!
  usdPriceOne: Float!
  usdTotalLiquidity: Float!
  timestamp: Int!
}